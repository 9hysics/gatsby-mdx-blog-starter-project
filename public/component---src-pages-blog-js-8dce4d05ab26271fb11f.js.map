{"version":3,"sources":["webpack:///./src/components/Horizontal.js","webpack:///./src/pages/blog.js","webpack:///./src/components/Link.js","webpack:///./src/constants/colors.js","webpack:///./src/constants/displays.js","webpack:///./src/components/Button.js","webpack:///./src/icons/ReorderOption.js","webpack:///./src/components/mdx/Title.js","webpack:///./src/components/mdx/Subtitle.js","webpack:///./src/components/mdx/Paragraph.js","webpack:///./src/components/mdx/index.js","webpack:///./src/components/Vertical.js","webpack:///./src/components/Navigation.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Image.js"],"names":["Horizontal","styled_components_browser_esm","div","withConfig","displayName","componentId","Container","BlogItem","extend","_templateObject","displays","BlogItemImage","BlogItemText","Blog","_ref","_ref$data","data","site","allMdx","react_default","a","createElement","Layout","edges","map","_ref2","post","node","key","id","frontmatter","banner","Image","sizes","childImageSharp","Link","to","slug","title","date","excerpt","Button","pageQuery","__webpack_exports__","children","other","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","test","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby_link__WEBPACK_IMPORTED_MODULE_3___default","Object","assign","href","__webpack_require__","d","main","MOBILE","TABLET","STYLE","styled_components__WEBPACK_IMPORTED_MODULE_3__","_constants_colors__WEBPACK_IMPORTED_MODULE_4__","LinkBase","_Link__WEBPACK_IMPORTED_MODULE_5__","ButtonBase","button","onClick","rest","Component","Title","h1","Subtitle","h2","Paragraph","p","mdx","props","Vertical","ReorderOption","forwardRef","ref","objectSpread_default","height","width","icons_ReorderOption","_React$Component","NoWithespace","_this","call","this","createRef","state","viewBox","inheritsLoose_default","_proto","prototype","componentDidMount","current","box","getBBox","setState","x","y","join","render","nav","NavigationDefault","NavigationMobile","NavigationLink","NavigationLinkDefault","NavigationLinkMobile","components_Navigation","places","isOpen","toggleOpen","react_media","query","matches","place","label","PLACES","colors","Layout_Container","Content","length","Layout_Layout","_Component","_this$props","_this$props$frontmatt","_site$siteMetadata","siteMetadata","siteDescription","description","siteKeywords","keywords","frontmatterKeywords","frontmatterDescription","react","Helmet_default","meta","name","content","lang","dist","components","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_image__WEBPACK_IMPORTED_MODULE_1__","gatsby_image__WEBPACK_IMPORTED_MODULE_1___default","styled_components__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-pages-blog-js-8dce4d05ab26271fb11f.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\n\nimport * as DISPLAYS from '../constants/displays';\nimport Layout from '../components/Layout';\nimport Horizontal from '../components/Horizontal';\nimport Link from '../components/Link';\nimport Button from '../components/Button';\nimport Image from '../components/Image';\n\n// used in GraphQL query\nconst IMAGE_MAX_WIDTH = 720;\nconst IMAGE_MIN_WIDTH = 320;\n\nconst Container = styled.div`\n  max-width: 1024px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BlogItem = Horizontal.extend`\n  margin: 40px 0;\n\n  @media ${DISPLAYS.TABLET} {\n    flex-direction: column;\n\n    &:not(:first-child) {\n      margin: 20px 0;\n    }\n\n    &:first-child {\n      margin-top: 0;\n      margin-bottom: 20px;\n    }\n  }\n`;\n\nconst BlogItemImage = styled.div`\n  width: 100%;\n  min-width: ${IMAGE_MIN_WIDTH}px;\n  max-width: ${IMAGE_MAX_WIDTH}px;\n`;\n\nconst BlogItemText = styled.div`\n  margin: 0 20px;\n\n  @media ${DISPLAYS.TABLET} {\n    margin-top: 20px;\n  }\n`;\n\nexport default function Blog({ data: { site, allMdx } }) {\n  return (\n    <Layout site={site}>\n      <Container>\n        {allMdx.edges.map(({ node: post }) => (\n          <BlogItem key={post.id}>\n            {post.frontmatter.banner && (\n              <BlogItemImage>\n                <Image\n                  sizes={\n                    post.frontmatter.banner.childImageSharp.sizes\n                  }\n                />\n              </BlogItemImage>\n            )}\n\n            <BlogItemText>\n              <h2>\n                <Link to={post.frontmatter.slug}>\n                  {post.frontmatter.title}\n                </Link>\n              </h2>\n\n              <small>{post.frontmatter.date}</small>\n\n              <p>{post.excerpt}</p>\n\n              <Button to={post.frontmatter.slug}>Read more</Button>\n            </BlogItemText>\n          </BlogItem>\n        ))}\n      </Container>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      ...site\n    }\n    allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            banner {\n              childImageSharp {\n                sizes(maxWidth: 720) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n            slug\n            categories\n            keywords\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport GatsbyLink from 'gatsby-link';\n\nconst Link = ({ children, to, ...other }) => {\n  // Tailor the following test to your environment.\n  // This example assumes that any internal link (intended for Gatsby)\n  // will start with exactly one slash, and that anything else is external.\n  const internal = /^\\/(?!\\/)/.test(to);\n\n  // Use gatsby-link for internal links, and <a> for others\n  if (internal) {\n    return (\n      <GatsbyLink to={to} {...other}>\n        {children}\n      </GatsbyLink>\n    );\n  }\n  return (\n    <a href={to} {...other}>\n      {children}\n    </a>\n  );\n};\n\nexport default Link;\n","export const main = '#525dce';\n","export const MOBILE = '(max-width: 460px)';\nexport const TABLET = '(max-width: 720px)';\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nimport * as COLORS from '../constants/colors';\nimport Link from './Link';\n\nconst STYLE = css`\n  color: ${COLORS.main};\n  background-color: #ffffff;\n  border: 1px solid ${COLORS.main};\n  font-size: 13px;\n  font-weight: 700;\n  text-transform: uppercase;\n  letter-spacing: 0.08em;\n  padding: 6px 12px;\n  margin-bottom: 0;\n  line-height: 1.42857143;\n  border-radius: 0;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n\n  svg,\n  path {\n    fill: ${COLORS.main};\n    stroke: ${COLORS.main};\n  }\n\n  -webkit-transition: all 0.2s ease-out;\n  -moz-transition: all 0.2s ease-out;\n  transition: all 0.2s ease-out;\n\n  &:visited {\n    color: ${COLORS.main};\n  }\n\n  &:hover {\n    color: #ffffff;\n    background-color: ${COLORS.main};\n    border-color: ${COLORS.main};\n\n    svg,\n    path {\n      fill: #ffffff;\n      stroke: #ffffff;\n    }\n  }\n`;\n\nconst LinkBase = styled(Link)`\n  ${STYLE};\n`;\n\nconst ButtonBase = styled.button`\n  ${STYLE};\n`;\n\nconst Button = ({ to, onClick, children, ...rest }) =>\n  to ? (\n    <LinkBase to={to} {...rest}>\n      {children}\n    </LinkBase>\n  ) : (\n    <ButtonBase onClick={onClick} {...rest}>\n      {children}\n    </ButtonBase>\n  );\n\nexport default Button;\n","import React from 'react';\n\nconst withNoWhitespace = Component =>\n  class NoWithespace extends React.Component {\n    constructor(props) {\n      super(props);\n      this.ref = React.createRef();\n      this.state = {\n        viewBox: null,\n      };\n    }\n    componentDidMount() {\n      if (this.ref.current) {\n        const box = this.ref.current.getBBox();\n        this.setState({\n          viewBox: [box.x, box.y, box.width, box.height].join(' '),\n        });\n      }\n    }\n    render() {\n      return (\n        <Component\n          {...this.props}\n          ref={this.ref}\n          viewBox={this.state.viewBox}\n        />\n      );\n    }\n  };\n\nconst ReorderOption = React.forwardRef((props, ref) => {\n  props = { ...props, ref };\n  return (\n    <svg height={438.533} width={438.533} {...props}>\n      <path d=\"M420.265 328.897H18.274c-4.952 0-9.235 1.813-12.851 5.428C1.807 337.938 0 342.224 0 347.172v36.548c0 4.949 1.807 9.23 5.424 12.848 3.619 3.613 7.902 5.424 12.851 5.424h401.991c4.948 0 9.229-1.811 12.847-5.424 3.614-3.617 5.421-7.898 5.421-12.848v-36.548c0-4.948-1.8-9.233-5.421-12.847-3.618-3.614-7.896-5.428-12.848-5.428zM433.112 41.968c-3.617-3.617-7.898-5.426-12.847-5.426H18.274c-4.952 0-9.235 1.809-12.851 5.426C1.807 45.583 0 49.866 0 54.813V91.36c0 4.949 1.807 9.229 5.424 12.847 3.619 3.618 7.902 5.424 12.851 5.424h401.991c4.948 0 9.229-1.807 12.847-5.424 3.614-3.617 5.421-7.898 5.421-12.847V54.813c-.001-4.947-1.805-9.23-5.422-12.845zM420.265 182.72H18.274c-4.952 0-9.235 1.809-12.851 5.426C1.807 191.761 0 196.044 0 200.992v36.547c0 4.948 1.807 9.236 5.424 12.847 3.619 3.614 7.902 5.428 12.851 5.428h401.991c4.948 0 9.229-1.813 12.847-5.428 3.614-3.61 5.421-7.898 5.421-12.847v-36.547c0-4.948-1.807-9.231-5.421-12.847-3.618-3.617-7.896-5.425-12.848-5.425z\" />\n    </svg>\n  );\n});\n\nexport default withNoWhitespace(ReorderOption);\n","import styled from 'styled-components';\n\nexport default styled.h1`\n  text-align: center;\n  font-size: 24px;\n  font-weight: 400;\n  line-height: 1.1;\n  border-top: 1px solid #f3f3f3;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding-top: 30px;\n  padding-bottom: 10px;\n`;\n","import styled from 'styled-components';\n\nexport default styled.h2`\n  text-align: left;\n  font-size: 18px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-weight: 900;\n  line-height: 1.1;\n`;\n","import styled from 'styled-components';\n\nexport default styled.p`\n  text-align: left;\n  font-size: 16px;\n  line-height: 1.58;\n  letter-spacing: -0.003em;\n  color: #555555;\n`;\n","import React from 'react';\n\nimport Title from './Title';\nimport Subtitle from './Subtitle';\nimport Paragraph from './Paragraph';\n\nexport default {\n  h1: props => <Title {...props} />,\n  h2: props => <Subtitle {...props} />,\n  p: props => <Paragraph {...props} />,\n};\n","import styled from 'styled-components';\n\nexport default styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Media from 'react-media';\n\nimport * as DISPLAYS from '../constants/displays';\nimport Vertical from '../components/Vertical';\nimport Link from '../components/Link';\nimport Button from '../components/Button';\nimport ReorderOption from '../icons/ReorderOption';\n\nconst Container = styled.nav`\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 1;\n  background-color: #ffffff;\n  box-shadow: 0px 1px 20px -10px rgba(0, 0, 0, 0.75);\n  color: #a8a8a8;\n`;\n\nconst NavigationDefault = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: flex-end;\n  padding: 15px;\n`;\n\nconst NavigationMobile = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: flex-end;\n  padding: 15px;\n`;\n\nconst NavigationLink = styled(Link)`\n  text-transform: uppercase;\n  font-weight: bold;\n  letter-spacing: 0.08em;\n`;\n\nconst NavigationLinkDefault = styled(NavigationLink)`\n  margin: 0 20px;\n`;\n\nconst NavigationLinkMobile = styled(NavigationLink)`\n  margin: 5px 0;\n`;\n\nconst Navigation = ({ places, isOpen, toggleOpen }) => (\n  <header>\n    <Container>\n      <Media query={DISPLAYS.MOBILE}>\n        {matches =>\n          matches ? (\n            <NavigationMobile>\n              {isOpen && (\n                <Vertical>\n                  {places.map(place => (\n                    <NavigationLinkMobile\n                      key={place.to}\n                      to={place.to}\n                    >\n                      {place.label}\n                    </NavigationLinkMobile>\n                  ))}\n                </Vertical>\n              )}\n              <div>\n                <Button onClick={toggleOpen}>\n                  <ReorderOption height=\"24px\" width=\"24px\" />\n                </Button>\n              </div>\n            </NavigationMobile>\n          ) : (\n            <NavigationDefault>\n              {places.map(place => (\n                <NavigationLinkDefault key={place.to} to={place.to}>\n                  {place.label}\n                </NavigationLinkDefault>\n              ))}\n            </NavigationDefault>\n          )\n        }\n      </Media>\n    </Container>\n  </header>\n);\n\nexport default Navigation;\n","import React, { Component, Fragment } from 'react';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport styled, { injectGlobal } from 'styled-components';\nimport { MDXProvider } from '@mdx-js/tag';\n\nimport 'prismjs/themes/prism-okaidia.css';\n\nimport * as COLORS from '../constants/colors';\nimport mdxComponents from './mdx';\nimport Navigation from './Navigation';\n\nconst PLACES = [\n  { to: '/', label: 'Home' },\n  { to: '/blog', label: 'Blog' },\n  { to: '/categories', label: 'Categories' },\n];\n\ninjectGlobal`\n  html, body {\n    margin: 0;\n    padding: 0;\n\n    font-family: \"Roboto\", Helvetica, Arial, sans-serif;\n    font-size: 16px;\n    line-height: 1.58;\n    letter-spacing: -.003em;\n\n    color: #333333;\n  }\n\n  h1 {\n    text-align: center;\n    font-size: 30px;\n    font-weight: 400;\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n\n  h2 {\n    text-transform: uppercase;\n    margin: 0 0 10px;\n    font-size: 24px;\n    letter-spacing: 0.08em;\n    font-weight: 400;\n    line-height: 1.1;\n    color: #333333;\n  }\n\n  small {\n    font-size: 12px;\n    color: #717171;\n  }\n\n  ul, li {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  a {\n    color: #333333;\n    text-decoration: none;\n  }\n\n  a:visited {\n    color: #333333;\n  }\n\n  a:hover {\n    color: ${COLORS.main};\n\n    -webkit-transition: all 0.2s ease-out;\n    -moz-transition: all 0.2s ease-out;\n    transition: all 0.2s ease-out;\n  }\n\n  ${() => {\n    /* PrismJS */ return null;\n  }}\n\n  pre {\n    background-color: #2f1e2e !important;\n    border-radius: 4px;\n    font-size: 14px;\n    border-left: 5px solid ${COLORS.main};\n  }\n\n  .gatsby-highlight-code-line {\n    background-color: #4f424c;\n    display: block;\n    margin-right: -1em;\n    margin-left: -1em;\n    padding-right: 1em;\n    padding-left: 1em;\n  }\n\n  ${() => {\n    /* Gatsby Image */ return null;\n  }}\n\n  .gatsby-resp-image-wrapper {\n    max-width: 100% !important;\n  }\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Content = styled.div`\n  margin-top: ${props =>\n    props.isOpen ? props.places.length * 45 : 55}px;\n\n  display: block;\n  align-self: center;\n`;\n\nexport default class Layout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  toggleOpen = () => {\n    this.setState(state => ({ isOpen: !state.isOpen }));\n  };\n\n  render() {\n    const { site, frontmatter = {}, children } = this.props;\n\n    const { isOpen } = this.state;\n\n    const {\n      title,\n      description: siteDescription,\n      keywords: siteKeywords,\n    } = site.siteMetadata;\n\n    const {\n      keywords: frontmatterKeywords,\n      description: frontmatterDescription,\n    } = frontmatter;\n\n    const keywords = (frontmatterKeywords || siteKeywords).join(', ');\n    const description = frontmatterDescription || siteDescription;\n\n    return (\n      <Fragment>\n        <Helmet\n          title={title}\n          meta={[\n            { name: 'description', content: description },\n            { name: 'keywords', content: keywords },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n\n        <MDXProvider components={mdxComponents}>\n          <Container>\n            <Navigation\n              places={PLACES}\n              isOpen={isOpen}\n              toggleOpen={this.toggleOpen}\n            />\n            <Content isOpen={isOpen} places={PLACES}>\n              {children}\n            </Content>\n          </Container>\n        </MDXProvider>\n      </Fragment>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  fragment site on Site {\n    siteMetadata {\n      title\n      description\n      author\n      keywords\n    }\n  }\n`;\n","import React from 'react';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: block;\n  width: 100%;\n`;\n\nconst Image = props => (\n  <Container>\n    <Img {...props} />\n  </Container>\n);\n\nexport default Image;\n"],"sourceRoot":""}